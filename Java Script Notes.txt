JavaScript Training
***07122017***
c# has CLR compiler and .NET Framework
Java has JVM and JDK
JavaScript
-Browser API and Browser
-NodeJs Node.exe

Browser
-Layout						-JavaScript
--Trident	IE				--Chakra
--Webkit	Chrome			--V8
--Gecko		FireFox			--Spider Monkey

-W3c		Specification	-ECMA Specification

Visual Studio Code download link : https://code.visualstudio.com/download

1.If you want to use JS API you use W3c Specs.
2.If you want to create JS API you use ECMA
3.Typescript is something that eliminates DOM and xmlhttprequest. But internally uses javascript.
4.Never put script tag and jquery and DOM in Head tag it dgrades the page's performance.
5.Put Css and modernizer in head tag.
6.Never out JS code in noscript tag. This only runs when java scrip is disabled in the browser.
7.Prefer not to write JS code in html page. Always try to write a seperate js file.
8.you run the java script file on cmd prompt using "node filename".
9.You should not write DOM spec code in Create API part that javascript file.
10.Load the things only when you need. Scoping is very imp in JS.
11.Refer the script tags where they are needed.
12.UTF-8 : Unicode Transformation Format
13.Always try to keep the file size very less.
14.Never put the source file in html page put the minified files in the src page.
15.A browser can downlaod 3 file at a time.
16.Webpack is tool or environment where you can minify the and bundle javascript code.
17.You should always check for the value in variable. 
18.JS is not types safe language.
19.Always use "var" for creating a variable.
20.In Ecma s5 there are only 2 scopes in JS Global and local. no block scope.
21.If you are writing code in ES5 then never use same name for variables.
22.Using let keyword in ecma6 lets you have a block scope.
23.Any variable you create using "let" is limited to the scope.
24.There is NO DIFFERENCE between " ' " and " " " in Java Script Notes.txt
25.JS has 3 types of memory areas.
-Stack, Heap, Queue.
26.JS is single thread environment. 1 by 1
27.Eventloop name of main thread in JS.
28.Queue is only created once and destroyed once. GC is depended on browser.
29.Functions are also Hoisted. But Function expression or anynomous functions are not Hoisted.
30.Functions is the 6th datatype in javascript. Function(); It holds reference to a method.
31.You can pass a function to a function. For this you may use Function Expression syntax.
32.In Arrow function once you introduce { } you must use return for result.
33.Function Overloading is not supported in JavaScript. But we can implement the overloading.
Day2
34.Closure is nothing but scoping of variables and which in turn returns a function or functions.
35.Closure is one way to create a namespace.
36.Closure is also some sort of module in javascript.
37.4_ObjectLiterals.html is logically a singleton but not technically as we are not using "new" keyword.
38.You need to give a uniqueness to your js and css files so those dont get cached in the browser and your functionality will not get affected due to stale js files in the browser cache.
39.In Javascript the context is represented where you place the function. But you may also change the context as well by using Display.call(<thisArg> that can be any object literal).
40."Cal, apply and bind" are used to change the context of the object literal against you want them to be called.
41.this represents the object who initiates the call and not the the object itself. The initiator is more important that the object which holds the function.
42.Either you dont use this keyword or you manually change the context.
43.Common place pattern in javascript. Dont use this keyword. Its used to fix the context of the object you are creating.
44.Another way to implement fixed context is arrow functions.
45.You can add new properties to the object on the fly.
46.Anything you add to object.prototype will be copied to all the instances.
47."===" is similar to "==" in java for object reference check.
48.Prototype is the best way to use if you have n number of instances.
48.Use Closure if you want to return only one function and only less number of times.
49.You cannot have multiple constructros in ES6 class. No modifiers.
50.If you use this keyword that is accessible to outside functions as well.
51.Convention : use _ for local variables.
52.No concept of polymorphism as we cannot havr the type of varialbe to be stated to the right or variable.
53.

Assigment
1.Create overloaded Add with variable number of args which should return the result and not log the result in console.

https://onedrive.live.com/?authkey=%21AIBzis3B48cnMsg&id=B799ADB9BA789C8F%21689&cid=B799ADB9BA789C8F


manish_vbn@hotmail.com
manishvbn@gmail.com (FB, LinkedIn)
+91 9822025942